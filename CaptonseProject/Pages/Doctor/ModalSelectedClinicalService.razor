@inject DoctorFEService doctorService

<!-- Modal.razor -->
<div class="modal fade @(IsVisible ? "show d-block" : "")" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
    <div class="modal-dialog modal-lg" @onclick:stopPropagation>
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Chọn dịch vụ khám lâm sàng</h5>
                <button type="button" class="btn-close" @onclick="Close"></button>
            </div>
            <div class="modal-body">
                <div class="container">
                    <div class="row align-items-center">
                        <div class="col-md-12">
                            <div class="input-group">
                                <input type="text" class="form-control" placeholder="Tìm kiếm theo tên bệnh nhân" />
                                <input type="date" class="form-control" />
                                
                                <button class="btn btn-secondary" type="button">
                                    <i class="bi bi-search"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                    @if (isLoaded.HasValue && !isLoaded.Value)
                    {
                        <div class="d-flex justify-content-center my-5">
                            <div class="spinner-border text-primary" role="status" style="width: 3rem; height: 3rem;">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </div>
                    }
                    else if (!string.IsNullOrWhiteSpace(ErrorMessage))
                    {
                        <div class="alert alert-danger" role="alert">
                            <i class="bi bi-exclamation-triangle-fill me-2"></i>
                            @ErrorMessage
                        </div>
                    }
                    else
                    {
                        <!-- Bảng hiển thị danh sách người dùng -->
                        <div class="card">
                            <div class="card-body">
                                <div class="table-responsive">
                                    <table class="table table-striped table-hover table-bordered">
                                        @* gắn dữ liệu ở đây *@
                                        <thead>
                                            <tr>
                                                <th>Số thứ tự</th>
                                                <th>Ngày khám</th>
                                                <th>Giờ khám</th>
                                                <th>Bệnh nhân</th>
                                                <th>Ngày sinh</th>
                                                <th>Số điện thoại</th>
                                                <th>Trạng thái</th>
                                                <th>Hành động</th>
                                            </tr>
                                        </thead>

                                        <tbody>
                                            <!-- Dòng 1 -->
                                            @{
                                                var i = 1;
                                            }
                                            @foreach (var item in doctorService.listAppointmentPatientForDoctorWaiting.Data!)
                                            {
                                                <tr>
                                                    <td>@i</td>
                                                    <td>@(item.AppointmentDate.HasValue? item.AppointmentDate.Value.ToString("dd/MM/yyyy") :"")</td>
                                                    <td>@(item.AppointmentTime.HasValue? item.AppointmentTime.Value.ToString("HH:mm") :"")</td>
                                                    <td>@item.PatientFullName</td>
                                                    <td>@((item.Dob.HasValue) ? item.Dob!.Value.ToString("dd/MM/yyyy") : "") </td>
                                                    <td>@item.Phone</td>
                                                    <td>@item.Status</td>
                                                    <td>
                                                        <div class="btn-group">
                                                            <button class="btn btn-sm btn-outline-primary">
                                                                Khám
                                                            </button>
                                                            <button class="btn btn-sm btn-outline-danger">
                                                                Bỏ lượt
                                                            </button>
                                                        </div>
                                                    </td>
                                                </tr>
                                                i++;
                                            }
                                        </tbody>
                                    </table>
                                </div>

                                <!-- Phân trang -->
                                @* <nav aria-label="Page navigation" class="mt-4">
                                    <ul class="pagination justify-content-center">
                                        <li class="page-item @(doctorService.listAppointmentPatientForDoctorWaiting.PageNumber == 1 ? "disabled" : "")">
                                            <a class="page-link" style="cursor: pointer;" @onclick="() => SelectPage(doctorService.listAppointmentPatientForDoctorWaiting.PageNumber - 1, StatusConstant.AppointmentStatus.Waiting)">Trước</a>
                                        </li>

                                        @foreach (var page in GetPageNumbersToDisplay(StatusConstant.AppointmentStatus.Waiting))
                                        {
                                            if (page == -1)
                                            {
                                                <li class="page-item disabled"><span class="page-link">...</span></li>
                                            }
                                            else
                                            {
                                                <li class="page-item @(page == doctorService.listAppointmentPatientForDoctorWaiting.PageNumber ? "active" : "")">
                                                    <a class="page-link" style="cursor: pointer;" @onclick="() => SelectPage(page, StatusConstant.AppointmentStatus.Waiting)">@(page)</a>
                                                </li>
                                            }
                                        }

                                        <li class="page-item @(doctorService.listAppointmentPatientForDoctorWaiting.PageNumber == doctorService.listAppointmentPatientForDoctorWaiting.TotalPages ? "disabled" : "")">
                                            <a class="page-link" style="cursor: pointer;" @onclick="() => SelectPage(doctorService.listAppointmentPatientForDoctorWaiting.PageNumber + 1, StatusConstant.AppointmentStatus.Waiting)">Sau</a>
                                        </li>
                                    </ul>
                                </nav> *@
                                
                            </div>
                        </div>
                    }

                </div>
            </div>

            @* <div class="modal-footer">
                <button class="btn btn-secondary" @onclick="Close">Đóng</button>
            </div> *@
        </div>
    </div>
</div>

@code {
    [Parameter]
    public EventCallback OnClose { get; set; }
    [Parameter]
    public EventCallback<int> OnSeletedClinicalService {get;set;}

    [Parameter]
    public bool IsVisible { get; set; }


    private bool? isLoaded = null;
    private string ErrorMessage = string.Empty;

    private async Task SeletedClinicalService(int clinicalServiceId){
        await OnSeletedClinicalService.InvokeAsync(clinicalServiceId);
    }
    private async Task Close()
    {
        await OnClose.InvokeAsync();
    }
}
