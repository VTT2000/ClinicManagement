@page "/doctor/diagnosis/{IdAppointment:int}"
@using System.Text;

@layout AdminLayout

@inject RoomServiceFE roomService
@inject DoctorFEService doctorService
@inject NavigationManager Navigation
@inject IToastService ToastService

<div class="container-fluid">
    <!-- Phần tiêu đề và tìm kiếm -->
    <div class="row mb-4 align-items-center">
        <div class="col-md-10">
            <label class="me-2 form-label">Phòng thực hiện:</label>
                @if(!roomService.SelectedRoomID.HasValue || roomService.SelectedRoomID.Value == 0){
                    <button class="btn btn-primary" @onclick="ShowModal">
                        <i class="bi bi-pencil me-2"></i>Chọn phòng
                    </button>
                }
                else{
                    if(infoRoom.StatusCode == StatusCodes.Status200OK){
                        <span>@infoRoom.Data!.RoomName</span>
                    }
                    else{
                        <span>@infoRoom.Message</span>
                    }
                    <button @onclick="SetRoomIDasNull" class="ms-2 btn btn-danger" >
                        <i class="bi bi-x-circle me-2"></i>Hủy
                    </button>
                }
        </div>
        <div class="col-md-2">
            <button @onclick="()=>GoToPageInfoProcessing()" class="btn btn-primary w-100"><i class="bi bi-plus-circle me-2"></i>Thêm
                mới</button>
        </div>
    </div>
    <!-- Loading spinner -->
    @if (!doctorService.isLoaded5)
    {
        <div class="d-flex justify-content-center my-5">
            <div class="spinner-border text-primary" role="status" style="width: 3rem; height: 3rem;">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (!string.IsNullOrEmpty(doctorService.ErrorMessage5))
    {
        <div class="alert alert-danger" role="alert">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>
            @doctorService.ErrorMessage5
        </div>
    }
    else
    {
        <!-- Bảng hiển thị danh sách người dùng -->
        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-hover table-bordered">
                        @* gắn dữ liệu ở đây *@
                        <thead>
                            <tr>
                                <th>Số thứ tự</th>
                                <th>Tên phòng</th>
                                <th>Thời gian khám</th>
                                <th>Tên dịch vụ khám lâm sàng</th>
                                <th>Kết quả khám lâm sàng</th>
                                <th>Triệu chứng</th>
                                <th>Kết quả chẩn đoán(Tên các bệnh lý)</th>
                                <th>Tiến hành</th>
                            </tr>
                        </thead>

                        <tbody>
                            <!-- Dòng 1 -->
                            @{
                                var i = 1;
                            }
                            @foreach (var item in doctorService.listDiagnosisDoctorVM)
                            {
                                <tr>
                                    <td>@i</td>
                                    <td>@item.RoomName</td>
                                    <td>@(item.CreatedAt.HasValue? item.CreatedAt.Value.ToString("dd/MM/yyyy HH:mm") : "")</td>
                                    <td>@item.ClinicalServiceName</td>
                                    <td>@item.ClinicalServiceResultReport</td>
                                    <td>@item.Symptoms</td>
                                    <td>@item.Diagnosis1</td>
                                    <td>
                                        <button @onclick="()=>GoToPageInfoProcessing(item.DiagnosisId)" class="btn btn-primary w-100">
                                            <i class="bi bi-pencil me-2"></i> Chi tiết
                                        </button>
                                    </td>
                                </tr>
                                i++;
                            }
                        </tbody>
                    </table>
                </div>

            </div>
        </div>
    }
</div>

<ModalSelectedRoom IsVisible="@isModalVisible" OnSeletedRoomID="OnSeletedRoomID" OnClose="HideModal" />

@code {
    [Parameter]
    public int IdAppointment {get; set;}

    public HTTPResponseClient<RoomVM> infoRoom = new HTTPResponseClient<RoomVM>();

    private void GoToPageInfoProcessing(int? diagnosisID = null){
        if(!diagnosisID.HasValue){
            if(!roomService.SelectedRoomID.HasValue){
                ToastService.ShowWarning("Hãy chọn phòng trước!");
            }
            else{
                Navigation.NavigateTo($"/doctor/infoProcessing/{IdAppointment}");
            }
        }
        else{
            Navigation.NavigateTo($"/doctor/infoProcessing/{IdAppointment}/{diagnosisID}");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        doctorService.OnChange += StateHasChanged;
        await base.OnInitializedAsync();
    }

    protected override async Task OnParametersSetAsync(){
        await doctorService.GetAllDiagnosisByAppointmentIDAsync(IdAppointment);
        await SetInfoRoomID();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
    }

    public void Dispose()
    {
        // Hủy lắng nghe khi component bị hủy
        doctorService.OnChange -= StateHasChanged;
    }

    private bool isModalVisible = false;
    private void ShowModal()
    {
        isModalVisible = true;
    }
    private void HideModal()
    {
        isModalVisible = false;
    }
    private async Task OnSeletedRoomID(int roomID){
        roomService.SelectedRoomID = roomID;
        await SetInfoRoomID();
    }
    private async Task SetInfoRoomID(){
        if(!roomService.SelectedRoomID.HasValue || roomService.SelectedRoomID.Value == 0){
            infoRoom = new HTTPResponseClient<RoomVM>();
        }
        else{
            infoRoom = await roomService.GetRoomVMByIDAsync(roomService.SelectedRoomID.Value);
        }
    }
    
    private void SetRoomIDasNull(){
        roomService.SelectedRoomID = null;
    }
}

