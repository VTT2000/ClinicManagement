@page "/doctor/infoProcessing/{IdAppointment:int}"
@page "/doctor/infoProcessing/{IdAppointment:int}/{diagnosisID:int}"

@layout AdminLayout
@inject DoctorFEService doctorService

<div class="container-fluid">
    <!-- Tabs -->
    <ul class="nav nav-tabs" id="khamTab" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="diagnosis-tab" data-bs-toggle="tab" data-bs-target="#diagnosis"
                type="button" role="tab">Chẩn đoán</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="serviceParaclinical-tab" data-bs-toggle="tab" data-bs-target="#serviceParaclinical" type="button"
                role="tab">Xét nghiệm</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="prescription-tab" data-bs-toggle="tab" data-bs-target="#prescription" type="button"
                role="tab">Toa thuốc</button>
        </li>
    </ul>

    <!-- Tab Content -->
    <div class="tab-content p-3 border border-top-0" id="khamTabContent">
        <div class="tab-pane fade show active" id="diagnosis" role="tabpanel">
            <div class="container-fluid bg-white text-black">
                <div class="row mb-3">
                    <div class="col-md-12">
                        <label class="me-2 form-label">Dịch vụ khám bệnh lâm sàng:</label>
                        @if(!infoClinicalService.StatusCode.HasValue){
                            <button class="btn btn-primary" @onclick="ShowModal">
                                <i class="bi bi-plus-circle me-2"></i>Thêm mới
                            </button>
                        }
                        else{
                            if(infoClinicalService.StatusCode == StatusCodes.Status200OK){
                                <span>@infoClinicalService.Data!.ServiceName</span>
                            }
                            else{
                                <span>@infoClinicalService.Message</span>
                            }
                            <button @onclick="SetClinicalServiceIDasNull" class="ms-2 btn btn-danger" >
                                <i class="bi bi-x-circle me-2"></i>Hủy
                            </button>
                        }
                    </div>
                    <div class="col-md-12">
                        <label class="form-label">Triệu chứng</label>
                        <textarea rows="2" class="form-control" placeholder="Nhập triệu chứng" /> 
                    </div>
                    <div class="col-md-12">
                        <label class="form-label">Kết quả khám</label>
                        <textarea rows="3" class="form-control" placeholder="Nhập kết quả khám của cơ thể bệnh nhân" /> 
                    </div>
                    <div class="col-md-12">
                        <label class="form-label">Kết luận (chẩn đoán)</label>
                        <textarea rows="2" class="form-control" placeholder="Nhập kết luận (chẩn đoán)" /> 
                    </div>
                    
                </div>
            </div>
        </div>
        <div class="tab-pane fade" id="serviceParaclinical" role="tabpanel">
            <div class="container-fluid bg-white text-black">
                <div class="row mb-3">
                    <div class="col-md-12">
                        <label class="me-2 form-label">Các dịch vụ xét nghiệm:</label>
                        <button class="btn btn-primary" @onclick="ShowModal2">
                            <i class="bi bi-plus-circle me-2"></i>Thêm mới
                        </button>
                    </div>
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-body">
                                <div class="table-responsive">
                                    <table class="table table-striped table-hover table-bordered">
                                        @* gắn dữ liệu ở đây *@
                                        <thead>
                                            <tr>
                                                <th>Số thứ tự</th>
                                                <th>Tên xét nghiệm</th>
                                                <th>Thời gian tạo</th>
                                                <th>Báo cáo kết quả</th>
                                                <th>Người thực hiện</th>
                                                <th>Phòng thực hiện</th>
                                                <th>Hành động</th>
                                            </tr>
                                        </thead>

                                        <tbody>
                                            <!-- Dòng 1 -->
                                            @{
                                                var i = 1;
                                            }
                                            @foreach (var item in listServiceParaclinical.Data!.Data!)
                                            {
                                                <tr>
                                                    <td>@i</td>
                                                    <td>@(item.ServiceName)</td>
                                                    <td>@(item.CreatedAt.HasValue ? item.CreatedAt.Value.ToString("dd/MM/yyyy HH:mm") : "")</td>
                                                    <td>@(item.ServiceResultReport)</td>
                                                    <td>@(item.FullNameUserperformed)</td>
                                                    <td>@(item.RoomName)</td>
                                                    <td>
                                                        <div class="btn-group">
                                                            <button @onclick="() => DeleteParaclinicalService(item.ServiceId)" class="btn btn-sm btn-outline-danger">
                                                                <i class="bi bi-trash"></i> Xóa
                                                            </button>
                                                        </div>
                                                    </td>
                                                </tr>
                                                i++;
                                            }
                                        </tbody>
                                    </table>
                                </div>

                                <!-- Phân trang -->
                                <nav aria-label="Page navigation" class="mt-4">
                                    <ul class="pagination justify-content-center">
                                        <li class="page-item @(listServiceParaclinical.Data!.PageNumber == 1 ? "disabled" : "")">
                                            <a class="page-link" style="cursor: pointer;" @onclick="() => SelectPage(listServiceParaclinical.Data!.PageNumber - 1)">Trước</a>
                                        </li>

                                        @foreach (var page in GetPageNumbersToDisplay())
                                        {
                                            if (page == -1)
                                            {
                                                <li class="page-item disabled"><span class="page-link">...</span></li>
                                            }
                                            else
                                            {
                                                <li class="page-item @(page == listServiceParaclinical.Data!.PageNumber ? "active" : "")">
                                                    <a class="page-link" style="cursor: pointer;" @onclick="() => SelectPage(page)">@(page)</a>
                                                </li>
                                            }
                                        }

                                        <li class="page-item @(listServiceParaclinical.Data!.PageNumber == listServiceParaclinical.Data!.TotalPages ? "disabled" : "")">
                                            <a class="page-link" style="cursor: pointer;" @onclick="() => SelectPage(listServiceParaclinical.Data!.PageNumber + 1)">Sau</a>
                                        </li>
                                    </ul>
                                </nav>
                                
                            </div>
                        </div>
                    </div>
                    
                </div>
            </div>
        </div>
        <div class="tab-pane fade" id="prescription" role="tabpanel">
            <div class="container-fluid bg-white text-black">
                <div class="row mb-3">
                    <div class="col-md-12">
                        <label class="me-2 form-label">Các toa thuốc:</label>
                        <button class="btn btn-primary" 
                        @onclick="AddInstanceMedicine"
                        >
                            <i class="bi bi-plus-circle me-2"></i>Thêm mới
                        </button>
                    </div>
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-body">
                                <div class="table-responsive">
                                    <table class="table table-striped table-hover table-bordered">
                                        @* gắn dữ liệu ở đây *@
                                        <thead>
                                            <tr>
                                                <th>Số thứ tự</th>
                                                <th>Toa thuốc (Chỉ định)</th>
                                                <th>Tên thuốc</th>
                                                <th>Số lượng</th>
                                                <th>Loại</th>
                                                <th>Hành động</th>
                                            </tr>
                                        </thead>

                                        <tbody>
                                            @for(int j=1; j <= detailSaveDiagnosisDoctorVM.Prescriptions.Count;j++)
                                            {
                                                var temp = detailSaveDiagnosisDoctorVM.Prescriptions[j-1];
                                                <tr>
                                                    <td rowspan="@(temp.PrescriptionDetails.Count == 0 ? 1 : temp.PrescriptionDetails.Count)">@j</td>
                                                    <td rowspan="@(temp.PrescriptionDetails.Count == 0 ? 1 : temp.PrescriptionDetails.Count)" >
                                                        <textarea @bind="temp.Prescription1" class="form-control" />
                                                    </td>
                                                    @if(temp.PrescriptionDetails.Count == 0){
                                                        <td colspan="3">
                                                            <button class="btn btn-primary w-100"
                                                            @* @onclick="ShowModal3" *@ // tao chon thuoc
                                                            >
                                                                <i class="bi bi-plus-circle me-2"></i>Chọn thuốc
                                                            </button>
                                                        </td>
                                                    }
                                                    else{
                                                        foreach(var item in temp.PrescriptionDetails){
                                                            <td rowspan="@(temp.PrescriptionDetails.Count)">
                                                            
                                                            </td>
                                                            <td rowspan="@(temp.PrescriptionDetails.Count)">
                                                            
                                                            </td>
                                                            <td rowspan="@(temp.PrescriptionDetails.Count)">
                                                            
                                                            </td>
                                                        }
                                                        
                                                    }

                                                    <td rowspan="@(temp.PrescriptionDetails.Count == 0 ? 1 : temp.PrescriptionDetails.Count)">
                                                        <div class="btn-group">
                                                            <button class="btn btn-sm btn-outline-danger">
                                                                <i class="bi bi-trash"></i> Xóa
                                                            </button>
                                                        </div>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>

                                <!-- Phân trang -->
                                @* <nav aria-label="Page navigation" class="mt-4">
                                    <ul class="pagination justify-content-center">
                                        <li class="page-item @(listServiceParaclinical.Data!.PageNumber == 1 ? "disabled" : "")">
                                            <a class="page-link" style="cursor: pointer;" @onclick="() => SelectPage(listServiceParaclinical.Data!.PageNumber - 1)">Trước</a>
                                        </li>

                                        @foreach (var page in GetPageNumbersToDisplay())
                                        {
                                            if (page == -1)
                                            {
                                                <li class="page-item disabled"><span class="page-link">...</span></li>
                                            }
                                            else
                                            {
                                                <li class="page-item @(page == listServiceParaclinical.Data!.PageNumber ? "active" : "")">
                                                    <a class="page-link" style="cursor: pointer;" @onclick="() => SelectPage(page)">@(page)</a>
                                                </li>
                                            }
                                        }

                                        <li class="page-item @(listServiceParaclinical.Data!.PageNumber == listServiceParaclinical.Data!.TotalPages ? "disabled" : "")">
                                            <a class="page-link" style="cursor: pointer;" @onclick="() => SelectPage(listServiceParaclinical.Data!.PageNumber + 1)">Sau</a>
                                        </li>
                                    </ul>
                                </nav> *@
                                
                            </div>
                        </div>
                    </div>
                    
                </div>
            </div>
        </div>

    </div>
</div>

<ModalSelectedClinicalService IsVisible="@isModalVisible" OnSeletedClinicalService="OnSeletedClinicalService" OnClose="HideModal" />
<ModalSelectedParaclinicalService IsVisible="@isModalVisible2" OnSeletedParaclinicalService="OnSeletedParaclinicalService" OnClose="HideModal2" />

@code {
    [Parameter]
    public int IdAppointment {get; set;}
    [Parameter]
    public int? diagnosisID {get; set;}
    private DetailSaveDiagnosisDoctorVM detailSaveDiagnosisDoctorVM = new DetailSaveDiagnosisDoctorVM();

    private HTTPResponseClient<ServiceVM> infoClinicalService = new HTTPResponseClient<ServiceVM>();
    private HTTPResponseClient<PagedResponse<List<ParaClinicalServiceInfoForDoctorVM>>> listServiceParaclinical = new HTTPResponseClient<PagedResponse<List<ParaClinicalServiceInfoForDoctorVM>>>();
    private HTTPResponseClient<List<MedicineForDiagnosisDoctorVM>> listMedicineToWatch = new HTTPResponseClient<List<MedicineForDiagnosisDoctorVM>>();
    
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }
    protected override async Task OnParametersSetAsync(){
        if(diagnosisID == null){
            // create
            detailSaveDiagnosisDoctorVM = new DetailSaveDiagnosisDoctorVM();
            detailSaveDiagnosisDoctorVM.AppointmentId = IdAppointment;
        }
        else{
            // info
            detailSaveDiagnosisDoctorVM = await doctorService.GetDiagnosisDoctorByIDAsync(diagnosisID.Value);
        }
        await SetMessageClinicalService();
        await SetParaclinicalService();
        @* await SetMedicineListToWatch(); *@
        await base.OnParametersSetAsync();
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
    }
    public void Dispose()
    {
        // Hủy lắng nghe khi component bị hủy
        @* doctorService.OnChange -= StateHasChanged; *@
    }


    private bool isModalVisible = false;
    private void ShowModal()
    {
        isModalVisible = true;
    }
    private void HideModal()
    {
        isModalVisible = false;
    }
    private async Task OnSeletedClinicalService(int serviceID){
        detailSaveDiagnosisDoctorVM.ClinicalServiceId = serviceID;
        await SetMessageClinicalService();
    }
    private async Task SetMessageClinicalService(){
        if(!detailSaveDiagnosisDoctorVM.ClinicalServiceId.HasValue || detailSaveDiagnosisDoctorVM.ClinicalServiceId == 0){
            infoClinicalService = new HTTPResponseClient<ServiceVM>();
        }
        else{
            infoClinicalService = await doctorService.GetServiceVMByIDAsync(detailSaveDiagnosisDoctorVM.ClinicalServiceId.Value);
        }
    }
    private async Task SetClinicalServiceIDasNull(){
        detailSaveDiagnosisDoctorVM.ClinicalServiceId = null;
        await SetMessageClinicalService();
    }


    private bool isModalVisible2 = false;
    private void ShowModal2()
    {
        isModalVisible2 = true;
    }
    private void HideModal2()
    {
        isModalVisible2 = false;
    }
    private async Task OnSeletedParaclinicalService(List<int> parclinicalList){
        detailSaveDiagnosisDoctorVM.ParaclinicalServiceList.AddRange(parclinicalList);
        await SetParaclinicalService();
    }
    private async Task SetParaclinicalService(){
        if(detailSaveDiagnosisDoctorVM.ParaclinicalServiceList.Count > 0){
            listServiceParaclinical = await doctorService.GetAllServiceVMByIDAsync(new PagedResponse<ConditionParaClinicalServiceInfo>(){
                PageNumber = listServiceParaclinical.Data!.PageNumber,
                PageSize = listServiceParaclinical.Data.PageSize,
                Data = new ConditionParaClinicalServiceInfo(){
                    DiagnosisID = diagnosisID,
                    listServiceParaclinical = detailSaveDiagnosisDoctorVM.ParaclinicalServiceList
                }
            });
        }
        else{
            listServiceParaclinical = new HTTPResponseClient<PagedResponse<List<ParaClinicalServiceInfoForDoctorVM>>>();
            listServiceParaclinical.Data = new PagedResponse<List<ParaClinicalServiceInfoForDoctorVM>>();
            listServiceParaclinical.Data.PageSize = 10;
            listServiceParaclinical.Data.PageNumber = 1;
            listServiceParaclinical.Data.Data = new List<ParaClinicalServiceInfoForDoctorVM>();
        }
    }
    private async Task DeleteParaclinicalService(int serviceID){
        detailSaveDiagnosisDoctorVM.ParaclinicalServiceList.Remove(serviceID);
        await SetParaclinicalService();
    }
    private List<int> GetPageNumbersToDisplay()
    {
        const int range = 2; // Số trang hiển thị trước và sau trang hiện tại
        var pages = new List<int>();
        
        if (listServiceParaclinical.Data!.TotalPages <= 7)
        {
            for (int i = 1; i <= listServiceParaclinical.Data.TotalPages; i++) pages.Add(i);
        }
        else
        {
            pages.Add(1);
            if (listServiceParaclinical.Data.PageNumber > range + 2) pages.Add(-1); // dấu "..."
            for (int i = Math.Max(2, listServiceParaclinical.Data.PageNumber - range); i <= Math.Min(listServiceParaclinical.Data.TotalPages - 1, listServiceParaclinical.Data.PageNumber + range); i++)
            {
                pages.Add(i);
            }
            if (listServiceParaclinical.Data.PageNumber < listServiceParaclinical.Data.TotalPages - range - 1) pages.Add(-1); // dấu "..."
            pages.Add(listServiceParaclinical.Data.TotalPages);
        }

        return pages;
    }
    private async Task SelectPage(int page)
    {
        if (page >= 1 && page <= listServiceParaclinical.Data!.TotalPages && page != listServiceParaclinical.Data.PageNumber)
        {
            listServiceParaclinical.Data.PageNumber = page;
            await SetParaclinicalService();
        }   
    }

    private void AddInstanceMedicine(){
        detailSaveDiagnosisDoctorVM.Prescriptions.Add(new PrescriptionDiagnosisDoctorVM());
        Console.WriteLine(detailSaveDiagnosisDoctorVM.Prescriptions.Count);
    }
}