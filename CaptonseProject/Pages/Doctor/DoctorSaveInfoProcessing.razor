@page "/doctor/infoProcessing/{IdAppointment:int}"
@page "/doctor/infoProcessing/{IdAppointment:int}/{diagnosisID:int}"

@layout AdminLayout
@inject DoctorFEService doctorService

<div class="container-fluid">
    <!-- Tabs -->
    <ul class="nav nav-tabs" id="khamTab" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="diagnosis-tab" data-bs-toggle="tab" data-bs-target="#diagnosis"
                type="button" role="tab">Chẩn đoán</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="serviceParaclinical-tab" data-bs-toggle="tab" data-bs-target="#serviceParaclinical" type="button"
                role="tab">Xét nghiệm</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="prescription-tab" data-bs-toggle="tab" data-bs-target="#prescription" type="button"
                role="tab">Toa thuốc</button>
        </li>
    </ul>

    <!-- Tab Content -->
    <div class="tab-content p-3 border border-top-0" id="khamTabContent">
        <div class="tab-pane fade show active" id="diagnosis" role="tabpanel">
            <div class="container-fluid bg-white text-black">
                <div class="row mb-3">
                    <div class="col-md-12">
                        <label class="me-2 form-label">Dịch vụ khám bệnh lâm sàng:</label>
                        @if(!infoClinicalService.StatusCode.HasValue){
                            <button class="btn btn-primary" @onclick="ShowModal">
                                <i class="bi bi-plus-circle me-2"></i>Thêm mới
                            </button>
                        }
                        else{
                            if(infoClinicalService.StatusCode == StatusCodes.Status200OK){
                                <span>@infoClinicalService.Data!.ServiceName</span>
                            }
                            else{
                                <span>@infoClinicalService.Message</span>
                            }
                            <button @onclick="SetClinicalServiceIDasNull" class="ms-2 btn btn-danger" >
                                <i class="bi bi-x-circle me-2"></i>Hủy
                            </button>
                        }
                    </div>
                    <div class="col-md-12">
                        <label class="form-label">Triệu chứng</label>
                        <textarea rows="2" class="form-control" placeholder="Nhập triệu chứng" /> 
                    </div>
                    <div class="col-md-12">
                        <label class="form-label">Kết quả khám</label>
                        <textarea rows="3" class="form-control" placeholder="Nhập kết quả khám của cơ thể bệnh nhân" /> 
                    </div>
                    <div class="col-md-12">
                        <label class="form-label">Kết luận (chẩn đoán)</label>
                        <textarea rows="2" class="form-control" placeholder="Nhập kết luận (chẩn đoán)" /> 
                    </div>
                    
                </div>
            </div>
        </div>
        <div class="tab-pane fade" id="serviceParaclinical" role="tabpanel">
            <div class="container-fluid bg-white text-black">
                <div class="row mb-3">
                    <div class="col-md-12">
                        <label class="me-2 form-label">Các dịch vụ xét nghiệm:</label>
                        <button class="btn btn-primary btn-sm" @onclick="ShowModal2">
                            <i class="bi bi-plus-circle me-2"></i>Thêm mới
                        </button>
                    </div>
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-body">
                                <div class="table-responsive">
                                    <table class="table table-striped table-hover table-bordered">
                                        @* gắn dữ liệu ở đây *@
                                        <thead>
                                            <tr>
                                                <th>Số thứ tự</th>
                                                <th>Tên xét nghiệm</th>
                                                <th>Thời gian tạo</th>
                                                <th>Báo cáo kết quả</th>
                                                <th>Người thực hiện</th>
                                                <th>Phòng thực hiện</th>
                                                <th>Hành động</th>
                                            </tr>
                                        </thead>

                                        <tbody>
                                            <!-- Dòng 1 -->
                                            @{
                                                var i = 1;
                                            }
                                            @foreach (var item in listServiceParaclinical.Data!)
                                            {
                                                <tr>
                                                    <td>@i</td>
                                                    <td>@(item.ServiceName)</td>
                                                    <td>@(item.CreatedAt.HasValue ? item.CreatedAt.Value.ToString("dd/MM/yyyy HH:mm") : "")</td>
                                                    <td>@(item.ServiceResultReport)</td>
                                                    <td>@(item.FullNameUserperformed)</td>
                                                    <td>@(item.RoomName)</td>
                                                    <td>
                                                        <div class="btn-group">
                                                            <button @onclick="() => DeleteParaclinicalService(item.ServiceId)" class="btn btn-sm btn-outline-danger">
                                                                <i class="bi bi-trash"></i> Xóa
                                                            </button>
                                                        </div>
                                                    </td>
                                                </tr>
                                                i++;
                                            }
                                        </tbody>
                                    </table>
                                </div>

                                
                            </div>
                        </div>
                    </div>
                    
                </div>
            </div>
        </div>
        <div class="tab-pane fade" id="prescription" role="tabpanel">
            <div class="container-fluid bg-white text-black">
                <div class="row mb-3">
                    <div class="col-md-12">
                        <label class="me-2 form-label">Các toa thuốc:</label>
                        <button class="btn btn-primary btn-sm" 
                        @onclick="AddInstanceMedicine"
                        >
                            <i class="bi bi-plus-circle me-2"></i>Thêm mới
                        </button>
                    </div>
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-body">
                                <div class="table-responsive">
                                    <table class="table table-hover table-bordered">
                                        @* gắn dữ liệu ở đây *@
                                        <thead>
                                            <tr>
                                                <th>Số thứ tự</th>
                                                <th>Toa thuốc (Chỉ định)</th>
                                                <th>Tên thuốc</th>
                                                <th>Số lượng</th>
                                                <th>Loại</th>
                                                <th>Hành động</th>
                                            </tr>
                                        </thead>

                                        <tbody>
                                            @for(int j=0; j < detailSaveDiagnosisDoctorVM.Prescriptions.Count;j++)
                                            {
                                                var temp = detailSaveDiagnosisDoctorVM.Prescriptions[j];
                                                int index = j;
                                                List<int> listMedinceID = temp.PrescriptionDetails.Select(p=>p.MedicineId).ToList();
                                                <tr>
                                                    <td>@(j+1)</td>
                                                    <td>
                                                        <textarea @bind="temp.Prescription1" class="form-control" />
                                                    </td>
                                                    @if(temp.PrescriptionDetails.Count == 0){
                                                        <td colspan="3">
                                                            <div class="form-control-plaintext text-center">
                                                                Chưa kê thuốc
                                                            </div>
                                                        </td>
                                                    }
                                                    else{
                                                        <td>
                                                            @foreach(var item in temp.PrescriptionDetails)
                                                            {
                                                                var info = listMedicineToWatch.Data!.SingleOrDefault(p => p.MedicineId == item.MedicineId);
                                                                @if(info != null){
                                                                    <div class="form-control-plaintext">@info.MedicineName</div>
                                                                }
                                                            }
                                                        </td>
                                                        <td>
                                                            @foreach(var item in temp.PrescriptionDetails)
                                                            {
                                                                <input @bind="item.Quantity" class="form-control" type="number" min="0">
                                                            }
                                                        </td>
                                                        <td>
                                                            @foreach(var item in temp.PrescriptionDetails)
                                                            {
                                                                var info = listMedicineToWatch.Data!.SingleOrDefault(p => p.MedicineId == item.MedicineId);
                                                                @if(info != null){
                                                                    <div class="form-control-plaintext">@info.Unit</div>
                                                                }
                                                            }
                                                        </td>
                                                    }

                                                    <td>
                                                        <div class="btn-group">
                                                            <button class="btn btn-sm btn-outline-primary" @onclick="()=>ShowModal3(index, listMedinceID)">
                                                                <i class="bi bi-pencil me-2"></i>Kê thuốc
                                                            </button>
                                                            <button @onclick="()=>DeletedPrescription(index)" class="btn btn-sm btn-outline-danger">
                                                                <i class="bi bi-trash"></i> Xóa
                                                            </button>
                                                        </div>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>

                                
                            </div>
                        </div>
                    </div>
                    
                </div>
            </div>
        </div>

    </div>
    <div class="d-flex justify-content-between my-2">
        <a href="/doctor/diagnosis/@IdAppointment" class="btn btn-secondary">Trở về</a>
        <button @onclick="() => SaveDetailDiagnosisServicePrescriptionForDoctor()" class="btn btn-primary w-25">Lưu</button>
    </div>
</div>


<ModalSelectedClinicalService IsVisible="@isModalVisible" OnSeletedClinicalService="OnSeletedClinicalService" OnClose="HideModal" />
<ModalSelectedParaclinicalService IsVisible="@isModalVisible2" OnSeletedParaclinicalService="OnSeletedParaclinicalService" OnClose="HideModal2" />
<ModalSelectedPrescription IsVisible="@isModalVisible3" OnClose="HideModal3" IndexMedicineCurent="@indexMedicineCurent" MedicineListCurrent="@medicineListCurrent" OnSeletedPrescriptionDetail="OnSeletedPrescriptionDetail" />
@code {
    [Parameter]
    public int IdAppointment {get; set;}
    [Parameter]
    public int? diagnosisID {get; set;}
    private DetailSaveDiagnosisDoctorVM detailSaveDiagnosisDoctorVM = new DetailSaveDiagnosisDoctorVM();

    private HTTPResponseClient<ServiceVM> infoClinicalService = new HTTPResponseClient<ServiceVM>();
    private HTTPResponseClient<List<ParaClinicalServiceInfoForDoctorVM>> listServiceParaclinical = new HTTPResponseClient<List<ParaClinicalServiceInfoForDoctorVM>>();
    private HTTPResponseClient<List<MedicineForDiagnosisDoctorVM>> listMedicineToWatch = new HTTPResponseClient<List<MedicineForDiagnosisDoctorVM>>();
    
    private void SaveDetailDiagnosisServicePrescriptionForDoctor(){
        // code luu
    }
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }
    protected override async Task OnParametersSetAsync(){
        if(diagnosisID == null){
            // create
            detailSaveDiagnosisDoctorVM = new DetailSaveDiagnosisDoctorVM();
            detailSaveDiagnosisDoctorVM.AppointmentId = IdAppointment;
        }
        else{
            // info
            detailSaveDiagnosisDoctorVM = await doctorService.GetDiagnosisDoctorByIDAsync(diagnosisID.Value);
        }
        await SetMessageClinicalService();
        await SetParaclinicalService();
        await SetlistMedicineToWatch();
        await base.OnParametersSetAsync();
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
    }
    public void Dispose()
    {
        // Hủy lắng nghe khi component bị hủy
        @* doctorService.OnChange -= StateHasChanged; *@
    }


    private bool isModalVisible = false;
    private void ShowModal()
    {
        isModalVisible = true;
    }
    private void HideModal()
    {
        isModalVisible = false;
    }
    private async Task OnSeletedClinicalService(int serviceID){
        detailSaveDiagnosisDoctorVM.ClinicalServiceId = serviceID;
        await SetMessageClinicalService();
    }
    private async Task SetMessageClinicalService(){
        if(!detailSaveDiagnosisDoctorVM.ClinicalServiceId.HasValue || detailSaveDiagnosisDoctorVM.ClinicalServiceId == 0){
            infoClinicalService = new HTTPResponseClient<ServiceVM>();
        }
        else{
            infoClinicalService = await doctorService.GetServiceVMByIDAsync(detailSaveDiagnosisDoctorVM.ClinicalServiceId.Value);
        }
    }
    private async Task SetClinicalServiceIDasNull(){
        detailSaveDiagnosisDoctorVM.ClinicalServiceId = null;
        await SetMessageClinicalService();
    }


    private bool isModalVisible2 = false;
    private void ShowModal2()
    {
        isModalVisible2 = true;
    }
    private void HideModal2()
    {
        isModalVisible2 = false;
    }
    private async Task OnSeletedParaclinicalService(List<int> parclinicalList){
        foreach(var i in parclinicalList){
            if(!detailSaveDiagnosisDoctorVM.ParaclinicalServiceList.Contains(i)){
                detailSaveDiagnosisDoctorVM.ParaclinicalServiceList.Add(i);
            }
        }
        await SetParaclinicalService();
    }
    private async Task SetParaclinicalService(){
        if(detailSaveDiagnosisDoctorVM.ParaclinicalServiceList.Count > 0){
            listServiceParaclinical = await doctorService.GetAllServiceVMByIDAsync(new ConditionParaClinicalServiceInfo(){
                DiagnosisID = diagnosisID,
                listServiceParaclinical = detailSaveDiagnosisDoctorVM.ParaclinicalServiceList
            });
        }
        else{
            listServiceParaclinical = new HTTPResponseClient<List<ParaClinicalServiceInfoForDoctorVM>>();
            listServiceParaclinical.Data = new List<ParaClinicalServiceInfoForDoctorVM>();
        }
    }
    private async Task DeleteParaclinicalService(int serviceID){
        detailSaveDiagnosisDoctorVM.ParaclinicalServiceList.Remove(serviceID);
        await SetParaclinicalService();
    }

    private bool isModalVisible3 = false;
    private int indexMedicineCurent = -1;
    private List<int> medicineListCurrent = new List<int>();
    private void ShowModal3(int index, List<int> list)
    {
        indexMedicineCurent = index;
        medicineListCurrent = list;
        isModalVisible3 = true;
    }
    private void HideModal3()
    {
        indexMedicineCurent = -1;
        medicineListCurrent = new List<int>();
        isModalVisible3 = false;
    }
    private async Task OnSeletedPrescriptionDetail((int, List<int>) para){
        Console.WriteLine(JsonSerializer.Serialize(para));
        int index = para.Item1;
        List<int> medicineList = para.Item2;
        foreach(var item in detailSaveDiagnosisDoctorVM.Prescriptions[index].PrescriptionDetails){
            if(medicineList.Contains(item.MedicineId)){
                medicineList.Remove(item.MedicineId);
            }
            else{
                detailSaveDiagnosisDoctorVM.Prescriptions[index].PrescriptionDetails.Remove(item);
            }
        }
        foreach(var item in medicineList){
            detailSaveDiagnosisDoctorVM.Prescriptions[index].PrescriptionDetails.Add(new PrescriptionDetailDiagnosisDoctorVM(){
                MedicineId = item,
                Quantity = 1
            });
        }

        await SetlistMedicineToWatch();
    }

    private async Task SetlistMedicineToWatch(){
        List<int> listMedicineID = new List<int>();
        foreach(var item in detailSaveDiagnosisDoctorVM.Prescriptions){
            var listTemp = item.PrescriptionDetails;
            foreach(var item2 in listTemp){
                if(!listMedicineID.Contains(item2.MedicineId)){
                    listMedicineID.Add(item2.MedicineId);
                }
            }
        }
        if(listMedicineID.Count != 0){
            listMedicineToWatch = await doctorService.GetAllMedicineForDoctorByIdAsync(listMedicineID);
        }
        else{
            listMedicineToWatch = new HTTPResponseClient<List<MedicineForDiagnosisDoctorVM>>();
            listMedicineToWatch.Data = new List<MedicineForDiagnosisDoctorVM>();
        }
    }
    
    private void AddInstanceMedicine(){
        detailSaveDiagnosisDoctorVM.Prescriptions.Add(new PrescriptionDiagnosisDoctorVM());
    }

    private void DeletedPrescription(int index){
        detailSaveDiagnosisDoctorVM.Prescriptions.RemoveAt(index);
    }

    // tien hành save và button trở về 
}