@page "/receptionist"
@using System.Text;
@layout AdminLayout
@inject ReceptionistService receptionistService

<div class="container-fluid">
    <!-- Phần tiêu đề và tìm kiếm -->
    <div class="row mb-4 align-items-center">
        <div class="col-md-6">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Tìm kiếm người dùng..." />
                <button class="btn btn-outline-secondary" type="button">
                    <i class="bi bi-search"></i>
                </button>
            </div>
        </div>
        <div class="col-md-4">
            <select class="form-select">
                <option selected>Tất cả vai trò</option>
                <option value="Admin">Admin</option>
                <option value="Bác sĩ">Bác sĩ</option>
                <option value="Lễ tân">Lễ tân</option>
                <option value="Kỹ thuật viên">Kỹ thuật viên</option>
                <option value="Bệnh nhân">Bệnh nhân</option>
            </select>
        </div>
        <div class="col-md-2">
            <button class="btn btn-primary w-100" @onclick="ShowModal"><i class="bi bi-plus-circle me-2"></i>Thêm mới</button>
        </div>
    </div>
    <!-- Loading spinner -->
    @if (!receptionistService.isLoaded)
    {
        <div class="d-flex justify-content-center my-5">
            <div class="spinner-border text-primary" role="status" style="width: 3rem; height: 3rem;">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (!string.IsNullOrEmpty(receptionistService.ErrorMessage))
    {
        <div class="alert alert-danger" role="alert">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>
            @receptionistService.ErrorMessage
        </div>
    }
    else
    {
        <!-- Bảng hiển thị danh sách người dùng -->
        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-hover table-bordered">
                        @* gắn dữ liệu ở đây *@
                        <thead>
                            <tr>
                                <th>Số thứ tự</th>
                                <th>Thời gian khám</th>
                                <th>Bệnh nhân</th>
                                <th>Ngày sinh</th>
                                <th>Số điện thoại</th>
                                <th>Bác sĩ</th>
                                <th>Trạng thái</th>
                            </tr>
                        </thead>

                        <tbody>
                            <!-- Dòng 1 -->
                            @{
                                var i = 1;
                            }
                            @foreach (var item in receptionistService.listAppointment.OrderBy(p=>p.AppointmentDate))
                            {
                                <tr>
                                    <td>@i</td>
                                    <td>@item.AppointmentDate.ToString("dd/MM/yyyy HH:mm")</td>
                                    <td>@item.PatientFullName</td>
                                    <td>@((item.Dob.HasValue)? item.Dob!.Value.ToString("dd/MM/yyyy") : "") </td>
                                    <td>@item.Phone</td>
                                    <td>@item.DoctorFullName</td>
                                    <td>@item.Status</td>
                                </tr>
                                i++;
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Phân trang -->
                <nav aria-label="Page navigation" class="mt-4">
                    <ul class="pagination justify-content-center">
                        <li class="page-item disabled">
                            <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Trước</a>
                        </li>
                        <li class="page-item active"><a class="page-link" href="#">1</a></li>
                        <li class="page-item"><a class="page-link" href="#">2</a></li>
                        <li class="page-item"><a class="page-link" href="#">3</a></li>
                        <li class="page-item">
                            <a class="page-link" href="#">Sau</a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>
    }
</div>

<ReceptionistModalAppointmentDetail IsVisible="@isModalVisible" OnClose="HideModal" />

@code {
    
    private bool isModalVisible = false;

    private void ShowModal()
    {
        isModalVisible = true;
    }

    private void HideModal()
    {
        isModalVisible = false;
    }

    protected override async Task OnInitializedAsync()
    {
        receptionistService.OnChange += StateHasChanged;
        await receptionistService.GetAllAppointmentPatientAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
    }

    public void Dispose()
    {
        // Hủy lắng nghe khi component bị hủy
        receptionistService.OnChange -= StateHasChanged;
    }
}

